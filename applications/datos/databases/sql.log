timestamp: 2016-03-08T09:28:09.021968
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512)
);
success!
timestamp: 2016-03-08T09:28:09.479883
CREATE TABLE auth_group(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role CHAR(512),
    description TEXT
);
success!
timestamp: 2016-03-08T09:28:09.827868
CREATE TABLE auth_membership(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-08T09:28:10.184230
CREATE TABLE auth_permission(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  ,
    name CHAR(512),
    table_name CHAR(512),
    record_id INTEGER
);
success!
timestamp: 2016-03-08T09:28:10.538475
CREATE TABLE auth_event(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    time_stamp TIMESTAMP,
    client_ip CHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    origin CHAR(512),
    description TEXT
);
success!
timestamp: 2016-03-08T09:28:11.009461
CREATE TABLE auth_cas(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    created_on TIMESTAMP,
    service CHAR(512),
    ticket CHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2016-03-08T11:51:19.176722
CREATE TABLE course(
    id SERIAL PRIMARY KEY,
    code_course INTEGER,
    name_course VARCHAR(60),
    description_course TEXT
);
success!
timestamp: 2016-03-08T11:51:20.031087
CREATE TABLE machine(
    id SERIAL PRIMARY KEY,
    ip_machine VARCHAR(512),
    code_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    operative_system VARCHAR(512),
    memory VARCHAR(512),
    processor VARCHAR(512),
    description_machine TEXT
);
success!
timestamp: 2016-03-08T12:10:25.472378
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2016-03-08T12:10:25.632008
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-03-08T12:10:25.756104
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-08T12:10:25.846075
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  ,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2016-03-08T12:10:26.002794
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-03-08T12:10:26.134242
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2016-03-08T12:41:04.777153
CREATE TABLE port_machine(
    id SERIAL PRIMARY KEY,
    ip_machine INTEGER REFERENCES machine (id) ON DELETE CASCADE  ,
    id_puerto VARCHAR(512),
    nombre_host VARCHAR(512)
);
success!
timestamp: 2016-03-08T12:51:04.786412
ALTER TABLE port_machine ADD id_port VARCHAR(512);
timestamp: 2016-03-08T12:51:04.842102
ALTER TABLE port_machine DROP COLUMN id_puerto;
success!
timestamp: 2016-03-08T12:55:04.862410
ALTER TABLE port_machine ADD hostname VARCHAR(512);
timestamp: 2016-03-08T12:55:04.950778
ALTER TABLE port_machine DROP COLUMN nombre_host;
success!
timestamp: 2016-03-08T14:05:37.557491
ALTER TABLE port_machine ADD number_port VARCHAR(512);
timestamp: 2016-03-08T14:05:37.588789
ALTER TABLE port_machine DROP COLUMN id_port;
success!
timestamp: 2016-03-08T14:06:45.261499
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:07:04.750708
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:08:04.750323
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:09:04.766342
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:09:24.022020
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:10:04.744441
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:11:04.734291
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:12:04.760924
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:12:25.901506
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:13:04.747058
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:14:04.786311
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:14:24.472955
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:15:04.781506
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher VARCHAR(512),
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:15:55.152739
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:16:02.618540
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:16:04.742218
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:16:10.598497
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:16:53.982894
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:16:55.988465
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:17:02.963891
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:17:04.895847
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:17:52.219627
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:18:04.736812
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:18:48.677702
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:19:04.749622
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
timestamp: 2016-03-08T14:20:29.348895
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group VARCHAR(512)
);
timestamp: 2016-03-08T14:20:30.600782
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group VARCHAR(512)
);
timestamp: 2016-03-08T14:21:04.736051
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group VARCHAR(512)
);
timestamp: 2016-03-08T14:21:09.109449
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group VARCHAR(512)
);
timestamp: 2016-03-08T14:22:04.735599
CREATE TABLE group(
    id SERIAL PRIMARY KEY,
    cod_group VARCHAR(512)
);
timestamp: 2016-03-08T14:22:22.818855
CREATE TABLE g(
    id SERIAL PRIMARY KEY,
    cod_group VARCHAR(512)
);
success!
timestamp: 2016-03-08T14:24:16.576191
CREATE TABLE course_group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512)
);
success!
timestamp: 2016-03-08T14:38:04.772104
CREATE TABLE student_x_machine(
    id SERIAL PRIMARY KEY,
    ip_machine INTEGER REFERENCES port_machine (id) ON DELETE CASCADE  ,
    code_student VARCHAR(512),
    name_student VARCHAR(512),
    semester VARCHAR(512)
);
success!
timestamp: 2016-03-08T18:08:44.177573
ALTER TABLE course ADD modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ;
timestamp: 2016-03-08T18:08:44.417709
ALTER TABLE course ADD is_active CHAR(1);
timestamp: 2016-03-08T18:08:44.420838
ALTER TABLE course ADD created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ;
timestamp: 2016-03-08T18:08:44.432040
ALTER TABLE course ADD created_on TIMESTAMP;
timestamp: 2016-03-08T18:08:44.435082
ALTER TABLE course ADD modified_on TIMESTAMP;
success!
timestamp: 2016-03-08T18:09:12.999384
ALTER TABLE machine ADD modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ;
timestamp: 2016-03-08T18:09:13.004474
ALTER TABLE machine ADD is_active CHAR(1);
timestamp: 2016-03-08T18:09:13.007524
ALTER TABLE machine ADD created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ;
timestamp: 2016-03-08T18:09:13.012278
ALTER TABLE machine ADD created_on TIMESTAMP;
timestamp: 2016-03-08T18:09:13.016410
ALTER TABLE machine ADD modified_on TIMESTAMP;
success!
timestamp: 2016-03-08T18:09:13.083134
ALTER TABLE port_machine ADD modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ;
timestamp: 2016-03-08T18:09:13.105041
ALTER TABLE port_machine ADD is_active CHAR(1);
timestamp: 2016-03-08T18:09:13.108393
ALTER TABLE port_machine ADD created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ;
timestamp: 2016-03-08T18:09:13.113034
ALTER TABLE port_machine ADD created_on TIMESTAMP;
timestamp: 2016-03-08T18:09:13.115991
ALTER TABLE port_machine ADD modified_on TIMESTAMP;
success!
timestamp: 2016-03-08T18:09:13.168514
ALTER TABLE course_group ADD modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ;
timestamp: 2016-03-08T18:09:13.174089
ALTER TABLE course_group ADD is_active CHAR(1);
timestamp: 2016-03-08T18:09:13.178624
ALTER TABLE course_group ADD created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ;
timestamp: 2016-03-08T18:09:13.183749
ALTER TABLE course_group ADD created_on TIMESTAMP;
timestamp: 2016-03-08T18:09:13.187371
ALTER TABLE course_group ADD modified_on TIMESTAMP;
success!
timestamp: 2016-03-08T18:09:13.238244
ALTER TABLE student_x_machine ADD modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ;
timestamp: 2016-03-08T18:09:13.244030
ALTER TABLE student_x_machine ADD is_active CHAR(1);
timestamp: 2016-03-08T18:09:13.247751
ALTER TABLE student_x_machine ADD created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ;
timestamp: 2016-03-08T18:09:13.251587
ALTER TABLE student_x_machine ADD created_on TIMESTAMP;
timestamp: 2016-03-08T18:09:13.254512
ALTER TABLE student_x_machine ADD modified_on TIMESTAMP;
success!
timestamp: 2016-03-17T00:11:16.587763
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-17T00:11:32.384944
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-17T00:12:02.482191
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-17T00:13:02.504936
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-17T00:14:02.491486
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-17T00:15:02.341730
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-17T00:15:23.760232
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-17T00:15:48.553702
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2016-03-17T00:15:48.681788
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-03-17T00:15:48.794023
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-17T00:15:48.913788
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  ,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2016-03-17T00:15:49.045584
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-03-17T00:15:49.203015
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2016-03-17T00:15:49.344930
CREATE TABLE course(
    id SERIAL PRIMARY KEY,
    code_course INTEGER,
    name_course VARCHAR(60),
    description_course TEXT,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-17T00:15:49.513057
CREATE TABLE machine(
    id SERIAL PRIMARY KEY,
    ip_machine VARCHAR(512),
    code_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    operative_system VARCHAR(512),
    memory VARCHAR(512),
    processor VARCHAR(512),
    description_machine TEXT,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-17T00:15:49.695987
CREATE TABLE port_machine(
    id SERIAL PRIMARY KEY,
    ip_machine INTEGER REFERENCES machine (id) ON DELETE CASCADE  ,
    number_port VARCHAR(512),
    hostname VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-17T00:15:49.875988
CREATE TABLE course_group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-17T00:15:50.054502
CREATE TABLE student_x_machine(
    id SERIAL PRIMARY KEY,
    ip_machine INTEGER REFERENCES port_machine (id) ON DELETE CASCADE  ,
    code_student VARCHAR(512),
    name_student VARCHAR(512),
    semester VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
<<<<<<< HEAD
timestamp: 2016-03-23T14:52:13.255660
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T14:52:19.943591
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T14:52:23.315073
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T14:52:26.031593
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T14:53:25.893469
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T14:53:58.123019
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T14:54:57.797319
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T14:55:57.836071
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T14:56:57.737173
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T14:57:57.711866
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T14:58:57.751205
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T14:59:57.717892
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T15:00:57.754381
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T15:01:57.872748
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T15:02:57.721452
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T15:03:57.838636
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T15:04:23.942926
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T15:04:57.713008
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T15:05:57.753651
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-03-23T15:07:43.884310
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2016-03-23T15:07:44.027065
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-03-23T15:07:44.152569
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-23T15:07:44.220410
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  ,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2016-03-23T15:07:44.322739
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-03-23T15:07:44.434686
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2016-03-23T15:07:44.544307
CREATE TABLE course(
    id SERIAL PRIMARY KEY,
    code_course INTEGER,
    name_course VARCHAR(60),
    description_course TEXT,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-23T15:07:44.658718
CREATE TABLE machine(
    id SERIAL PRIMARY KEY,
    ip_machine VARCHAR(512),
    code_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    operative_system VARCHAR(512),
    memory VARCHAR(512),
    processor VARCHAR(512),
    description_machine TEXT,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-23T15:07:44.768990
CREATE TABLE port_machine(
    id SERIAL PRIMARY KEY,
    ip_machine INTEGER REFERENCES machine (id) ON DELETE CASCADE  ,
    number_port VARCHAR(512),
    hostname VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-23T15:07:44.892117
CREATE TABLE course_group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-03-23T15:07:45.027120
CREATE TABLE student_x_machine(
    id SERIAL PRIMARY KEY,
    ip_machine INTEGER REFERENCES port_machine (id) ON DELETE CASCADE  ,
    code_student VARCHAR(512),
    name_student VARCHAR(512),
    semester VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
=======
timestamp: 2016-04-03T13:12:53.232597
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-04-03T14:15:11.672294
ALTER TABLE job ADD state CHAR(1);
success!
timestamp: 2016-04-03T16:43:01.029240
CREATE TABLE scheduler_task(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    application_name CHAR(512),
    task_name CHAR(512),
    group_name CHAR(512),
    status CHAR(512),
    function_name CHAR(512),
    uuid CHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name CHAR(512)
);
success!
timestamp: 2016-04-03T16:43:01.208927
CREATE TABLE scheduler_run(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    task_id INTEGER REFERENCES scheduler_task (id) ON DELETE CASCADE  ,
    status CHAR(512),
    start_time TIMESTAMP,
    stop_time TIMESTAMP,
    run_output TEXT,
    run_result TEXT,
    traceback TEXT,
    worker_name CHAR(512)
);
success!
timestamp: 2016-04-03T16:43:01.305728
CREATE TABLE scheduler_worker(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    worker_name CHAR(255) UNIQUE,
    first_heartbeat TIMESTAMP,
    last_heartbeat TIMESTAMP,
    status CHAR(512),
    is_ticker CHAR(1),
    group_names TEXT,
    worker_stats TEXT
);
success!
timestamp: 2016-04-03T16:43:01.400718
CREATE TABLE scheduler_task_deps(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    job_name CHAR(512),
    task_parent INTEGER,
    task_child INTEGER REFERENCES scheduler_task (id) ON DELETE CASCADE  ,
    can_visit CHAR(1)
);
success!
timestamp: 2016-04-03T22:06:59.128515
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
success!
timestamp: 2016-04-03T22:06:59.461597
CREATE TABLE scheduler_run(
    id SERIAL PRIMARY KEY,
    task_id INTEGER REFERENCES scheduler_task (id) ON DELETE CASCADE  ,
    status VARCHAR(512),
    start_time TIMESTAMP,
    stop_time TIMESTAMP,
    run_output TEXT,
    run_result TEXT,
    traceback TEXT,
    worker_name VARCHAR(512)
);
success!
timestamp: 2016-04-03T22:06:59.553509
CREATE TABLE scheduler_worker(
    id SERIAL PRIMARY KEY,
    worker_name VARCHAR(255) UNIQUE,
    first_heartbeat TIMESTAMP,
    last_heartbeat TIMESTAMP,
    status VARCHAR(512),
    is_ticker CHAR(1),
    group_names TEXT,
    worker_stats JSON
);
success!
timestamp: 2016-04-03T22:06:59.644627
CREATE TABLE scheduler_task_deps(
    id SERIAL PRIMARY KEY,
    job_name VARCHAR(512),
    task_parent INTEGER,
    task_child INTEGER REFERENCES scheduler_task (id) ON DELETE CASCADE  ,
    can_visit CHAR(1)
);
success!
timestamp: 2016-04-03T22:41:31.130849
ALTER TABLE job ADD task_id VARCHAR(512);
success!
timestamp: 2016-04-05T18:04:17.532780
ALTER TABLE job DROP COLUMN state;
success!
timestamp: 2016-04-05T18:27:32.256725
ALTER TABLE job ADD task_id__tmp INTEGER;
UPDATE job SET task_id__tmp=task_id;
timestamp: 2016-04-05T18:27:34.062051
ALTER TABLE job ADD task_id__tmp INTEGER;
UPDATE job SET task_id__tmp=task_id;
timestamp: 2016-04-05T18:27:59.157388
ALTER TABLE job ADD task_id__tmp INTEGER;
UPDATE job SET task_id__tmp=task_id;
timestamp: 2016-04-05T18:32:23.831038
ALTER TABLE job ADD task_id__tmp INTEGER;
UPDATE job SET task_id__tmp=task_id;
timestamp: 2016-04-05T18:32:56.951820
ALTER TABLE job ADD task_id__tmp INTEGER;
UPDATE job SET task_id__tmp=task_id;
>>>>>>> origin
timestamp: 2016-04-13T14:50:00.978721
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T14:51:01.251039
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T14:52:01.177762
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T14:52:22.657715
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T14:53:16.535141
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T14:54:16.275671
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T14:54:24.129833
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T14:55:16.495119
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T14:55:23.771170
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T14:56:05.871586
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T14:56:27.372815
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T15:16:48.624022
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
timestamp: 2016-04-13T15:23:35.910961
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:23:46.418182
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:23:48.275950
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:24:35.913862
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:24:48.295186
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:25:35.946590
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:25:48.273389
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:26:17.121890
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:26:22.578650
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:26:42.515109
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:27:42.435988
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:28:42.440192
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:29:42.454987
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:30:42.473587
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:31:42.437212
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:32:42.442340
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:33:42.450853
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:34:42.447823
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:35:42.443059
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:36:42.443054
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-13T15:37:42.462500
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-14T14:51:10.340685
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-14T14:51:14.152335
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
timestamp: 2016-04-28T21:06:35.902871
ALTER TABLE job ADD action VARCHAR(512);
success!
timestamp: 2016-04-28T21:31:48.784059
ALTER TABLE job ADD date TIMESTAMP;
success!
timestamp: 2016-07-18T19:06:15.552424
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-07-18T19:06:16.927789
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-07-18T19:06:39.360564
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
timestamp: 2016-07-30T14:37:43.417545
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2016-07-30T14:37:43.639598
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-07-30T14:37:43.723741
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T14:37:43.815852
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  ,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2016-07-30T14:37:43.891242
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-07-30T14:37:43.966690
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2016-07-30T14:37:44.042397
CREATE TABLE course(
    id SERIAL PRIMARY KEY,
    code_course INTEGER,
    name_course VARCHAR(60),
    description_course TEXT,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T14:37:44.118691
CREATE TABLE machine(
    id SERIAL PRIMARY KEY,
    ip_machine VARCHAR(512),
    code_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    operative_system VARCHAR(512),
    memory VARCHAR(512),
    processor VARCHAR(512),
    description_machine TEXT,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T14:37:44.194518
CREATE TABLE port_machine(
    id SERIAL PRIMARY KEY,
    ip_machine INTEGER REFERENCES machine (id) ON DELETE CASCADE  ,
    number_port VARCHAR(512),
    hostname VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T14:37:44.279184
CREATE TABLE course_group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T14:37:44.371950
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    action VARCHAR(512),
    date TIMESTAMP,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
success!
timestamp: 2016-07-30T14:37:44.487487
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
success!
timestamp: 2016-07-30T14:37:44.629693
CREATE TABLE scheduler_run(
    id SERIAL PRIMARY KEY,
    task_id INTEGER REFERENCES scheduler_task (id) ON DELETE CASCADE  ,
    status VARCHAR(512),
    start_time TIMESTAMP,
    stop_time TIMESTAMP,
    run_output TEXT,
    run_result TEXT,
    traceback TEXT,
    worker_name VARCHAR(512)
);
success!
timestamp: 2016-07-30T14:37:44.704240
CREATE TABLE scheduler_worker(
    id SERIAL PRIMARY KEY,
    worker_name VARCHAR(255) UNIQUE,
    first_heartbeat TIMESTAMP,
    last_heartbeat TIMESTAMP,
    status VARCHAR(512),
    is_ticker CHAR(1),
    group_names TEXT,
    worker_stats JSON
);
success!
timestamp: 2016-07-30T14:37:44.796446
CREATE TABLE scheduler_task_deps(
    id SERIAL PRIMARY KEY,
    job_name VARCHAR(512),
    task_parent INTEGER,
    task_child INTEGER REFERENCES scheduler_task (id) ON DELETE CASCADE  ,
    can_visit CHAR(1)
);
success!
timestamp: 2016-07-30T14:52:20.785881
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2016-07-30T14:52:20.993111
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-07-30T14:52:21.114231
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T14:52:21.271501
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  ,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2016-07-30T14:52:21.465569
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-07-30T14:52:21.614402
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2016-07-30T14:52:21.789506
CREATE TABLE course(
    id SERIAL PRIMARY KEY,
    code_course INTEGER,
    name_course VARCHAR(60),
    description_course TEXT,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T14:52:21.980208
CREATE TABLE machine(
    id SERIAL PRIMARY KEY,
    ip_machine VARCHAR(512),
    code_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    operative_system VARCHAR(512),
    memory VARCHAR(512),
    processor VARCHAR(512),
    description_machine TEXT,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T14:52:22.200169
CREATE TABLE port_machine(
    id SERIAL PRIMARY KEY,
    ip_machine INTEGER REFERENCES machine (id) ON DELETE CASCADE  ,
    number_port VARCHAR(512),
    hostname VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T14:52:22.383223
CREATE TABLE course_group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T14:52:22.565825
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    action VARCHAR(512),
    date TIMESTAMP,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
success!
timestamp: 2016-07-30T14:56:46.667736
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
success!
timestamp: 2016-07-30T14:56:46.792890
CREATE TABLE scheduler_run(
    id SERIAL PRIMARY KEY,
    task_id INTEGER REFERENCES scheduler_task (id) ON DELETE CASCADE  ,
    status VARCHAR(512),
    start_time TIMESTAMP,
    stop_time TIMESTAMP,
    run_output TEXT,
    run_result TEXT,
    traceback TEXT,
    worker_name VARCHAR(512)
);
success!
timestamp: 2016-07-30T14:56:46.943059
CREATE TABLE scheduler_worker(
    id SERIAL PRIMARY KEY,
    worker_name VARCHAR(255) UNIQUE,
    first_heartbeat TIMESTAMP,
    last_heartbeat TIMESTAMP,
    status VARCHAR(512),
    is_ticker CHAR(1),
    group_names TEXT,
    worker_stats JSON
);
success!
timestamp: 2016-07-30T14:56:47.051163
CREATE TABLE scheduler_task_deps(
    id SERIAL PRIMARY KEY,
    job_name VARCHAR(512),
    task_parent INTEGER,
    task_child INTEGER REFERENCES scheduler_task (id) ON DELETE CASCADE  ,
    can_visit CHAR(1)
);
success!
timestamp: 2016-07-30T17:30:57.032700
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2016-07-30T17:30:57.104540
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-07-30T17:30:57.188615
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T17:30:57.230520
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  ,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2016-07-30T17:30:57.314959
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2016-07-30T17:30:57.389959
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2016-07-30T17:30:57.473727
CREATE TABLE course(
    id SERIAL PRIMARY KEY,
    code_course INTEGER,
    name_course VARCHAR(60),
    description_course TEXT,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T17:30:57.550534
CREATE TABLE machine(
    id SERIAL PRIMARY KEY,
    ip_machine VARCHAR(512),
    code_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    operative_system VARCHAR(512),
    memory VARCHAR(512),
    processor VARCHAR(512),
    description_machine TEXT,
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T17:30:57.633576
CREATE TABLE port_machine(
    id SERIAL PRIMARY KEY,
    ip_machine INTEGER REFERENCES machine (id) ON DELETE CASCADE  ,
    number_port VARCHAR(512),
    hostname VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T17:30:57.725632
CREATE TABLE course_group(
    id SERIAL PRIMARY KEY,
    cod_group INTEGER,
    id_teacher INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    cod_course INTEGER REFERENCES course (id) ON DELETE CASCADE  ,
    semester VARCHAR(512),
    is_active CHAR(1),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    modified_on TIMESTAMP,
    modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  
);
success!
timestamp: 2016-07-30T17:30:57.802928
CREATE TABLE job(
    id SERIAL PRIMARY KEY,
    name VARCHAR(512),
    action VARCHAR(512),
    date TIMESTAMP,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE  ,
    task_id VARCHAR(512)
);
success!
timestamp: 2016-07-30T17:30:57.907599
CREATE TABLE scheduler_task(
    id SERIAL PRIMARY KEY,
    application_name VARCHAR(512),
    task_name VARCHAR(512),
    group_name VARCHAR(512),
    status VARCHAR(512),
    function_name VARCHAR(512),
    uuid VARCHAR(255) UNIQUE,
    args TEXT,
    vars TEXT,
    enabled CHAR(1),
    start_time TIMESTAMP,
    next_run_time TIMESTAMP,
    stop_time TIMESTAMP,
    repeats INTEGER,
    retry_failed INTEGER,
    period INTEGER,
    prevent_drift CHAR(1),
    timeout INTEGER,
    sync_output INTEGER,
    times_run INTEGER,
    times_failed INTEGER,
    last_run_time TIMESTAMP,
    assigned_worker_name VARCHAR(512)
);
success!
timestamp: 2016-07-30T17:30:58.018215
CREATE TABLE scheduler_run(
    id SERIAL PRIMARY KEY,
    task_id INTEGER REFERENCES scheduler_task (id) ON DELETE CASCADE  ,
    status VARCHAR(512),
    start_time TIMESTAMP,
    stop_time TIMESTAMP,
    run_output TEXT,
    run_result TEXT,
    traceback TEXT,
    worker_name VARCHAR(512)
);
success!
timestamp: 2016-07-30T17:30:58.093202
CREATE TABLE scheduler_worker(
    id SERIAL PRIMARY KEY,
    worker_name VARCHAR(255) UNIQUE,
    first_heartbeat TIMESTAMP,
    last_heartbeat TIMESTAMP,
    status VARCHAR(512),
    is_ticker CHAR(1),
    group_names TEXT,
    worker_stats JSON
);
success!
timestamp: 2016-07-30T17:30:58.201997
CREATE TABLE scheduler_task_deps(
    id SERIAL PRIMARY KEY,
    job_name VARCHAR(512),
    task_parent INTEGER,
    task_child INTEGER REFERENCES scheduler_task (id) ON DELETE CASCADE  ,
    can_visit CHAR(1)
);
success!
