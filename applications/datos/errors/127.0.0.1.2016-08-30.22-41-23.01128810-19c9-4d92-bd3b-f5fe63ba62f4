(dp1
S'output'
p2
S"<type 'exceptions.NameError'> global name 'auth_membership' is not defined"
p3
sS'layer'
p4
S'/home/camilo/Escritorio/nuevo_nuevo_repo_git/proyecto_mv/applications/datos/controllers/admin.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# intente algo como\ndef index(): return dict(message="hello from admin.py")\n\n@auth.requires_login()\n@auth.requires_membership(\'Administrador\')\ndef teachers():\n    teacher_group = db1(db1.auth_group.role == "Docente").select(db1.auth_group.id)\n    id_teacher_group =  teacher_group[0][\'id\'] \n    \n    ids_docentes = db1(db1.auth_membership.group_id == id_teacher_group).select(auth_membership.user_id)\n    print " --------------------- asdasd ---------------"\n    print ids_docentes\n    \n    query= db1.auth_membership.group_id == id_teacher_group\n    campos = [db1.auth_membership.user_id]\n    form = SQLFORM.grid(query, campos,  deletable=False, csv=False, editable=True, details=True, create=False\n       #,links=[\n       #     dict(  header=T(\'Details\'),  body= lambda row: \n       #          A(\n       #             SPAN(_class="icon magnifier icon-zoom-in glyphicon glyphicon-zoom-in") + SPAN(T("View"),_class="buttontext button"), \n       #             _class="button btn btn-default", _title=T("View"), _href=URL(\'admin\', \'teacher_details\', args=[row.user_id]) \n       #         )\n       #     )\n       # ]\n    )\n    return dict(form=form)\n\n@auth.requires_login()\n@auth.requires_membership(\'Administrador\')\ndef teacher_details():\n    teacher_id = request.args[0]\n    query= db1.auth_user.id == teacher_id\n    #campos = []\n    form = SQLFORM.grid(query, deletable=False, csv=False, editable=False, details=False, user_signature=False, searchable=False, create=False)\n    return dict(form=form)\n\n\n@auth.requires_login()\n@auth.requires_membership(\'Administrador\')\ndef courses_and_groups():\n    indentificador = auth.user_id\n\n    mensaje = H1 (T("Please select a course"))\n    restricciones = dict(\n        #course_group = db1.course_group.id_teacher== indentificador\n                         #, course = db1.course.id == 2\n                        )\n    grid = SQLFORM.smartgrid(db1.course,linked_tables=[\'course_group\'], constraints = restricciones,\n        #searchable=False,\n        deletable=False, editable=True, details=True, csv= False, create= False\n        #, links=[lambda row:A(T("Select"),_href=URL("maquinas","lista_maquina_clase",args=[row.id]))]\n    )\n    return locals()\n\n@auth.requires_login()\n@auth.requires_membership(\'Administrador\')\ndef lista_maquina_materia():\n    indentificador = auth.user_id\n\n    mensaje = H1 (T("Please select a course"))\n    restricciones = dict(\n        #course_group = db1.course_group.id_teacher== indentificador\n                         #, course = db1.course.id == 2\n                        )\n    grid = SQLFORM.smartgrid(db1.course,linked_tables=[\'machine\'], constraints = restricciones,\n        #searchable=False,\n        deletable=True, editable=True, details=True, csv= False, create= False\n        #, links=[lambda row:A(T("Select"),_href=URL("maquinas","lista_maquina_clase",args=[row.id]))]\n    )\n    return locals()\n\nresponse._vars=response._caller(teachers)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/camilo/Escritorio/nuevo_nuevo_repo_git/proyecto_mv/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/camilo/Escritorio/nuevo_nuevo_repo_git/proyecto_mv/applications/datos/controllers/admin.py", line 73, in <module>\n  File "/home/camilo/Escritorio/nuevo_nuevo_repo_git/proyecto_mv/gluon/globals.py", line 415, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/camilo/Escritorio/nuevo_nuevo_repo_git/proyecto_mv/gluon/tools.py", line 4231, in f\n    return action(*a, **b)\n  File "/home/camilo/Escritorio/nuevo_nuevo_repo_git/proyecto_mv/gluon/tools.py", line 4231, in f\n    return action(*a, **b)\n  File "/home/camilo/Escritorio/nuevo_nuevo_repo_git/proyecto_mv/applications/datos/controllers/admin.py", line 11, in teachers\n    ids_docentes = db1(db1.auth_membership.group_id == id_teacher_group).select(auth_membership.user_id)\nNameError: global name \'auth_membership\' is not defined\n'
p11
s.